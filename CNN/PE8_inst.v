// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
// Created on Wed Oct 25 19:57:27 2017

PE8 PE8_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.in1(in1_sig) ,	// input [N-1:0] in1_sig
	.in2(in2_sig) ,	// input [N-1:0] in2_sig
	.in3(in3_sig) ,	// input [N-1:0] in3_sig
	.in4(in4_sig) ,	// input [N-1:0] in4_sig
	.in5(in5_sig) ,	// input [N-1:0] in5_sig
	.in6(in6_sig) ,	// input [N-1:0] in6_sig
	.in7(in7_sig) ,	// input [N-1:0] in7_sig
	.in8(in8_sig) ,	// input [N-1:0] in8_sig
	.in9(in9_sig) ,	// input [N-1:0] in9_sig
	.in10(in10_sig) ,	// input [N-1:0] in10_sig
	.in11(in11_sig) ,	// input [N-1:0] in11_sig
	.in12(in12_sig) ,	// input [N-1:0] in12_sig
	.in13(in13_sig) ,	// input [N-1:0] in13_sig
	.in14(in14_sig) ,	// input [N-1:0] in14_sig
	.w1(w1_sig) ,	// input [N-1:0] w1_sig
	.w2(w2_sig) ,	// input [N-1:0] w2_sig
	.w3(w3_sig) ,	// input [N-1:0] w3_sig
	.w4(w4_sig) ,	// input [N-1:0] w4_sig
	.w5(w5_sig) ,	// input [N-1:0] w5_sig
	.w6(w6_sig) ,	// input [N-1:0] w6_sig
	.w7(w7_sig) ,	// input [N-1:0] w7_sig
	.w8(w8_sig) ,	// input [N-1:0] w8_sig
	.w9(w9_sig) ,	// input [N-1:0] w9_sig
	.w10(w10_sig) ,	// input [N-1:0] w10_sig
	.w11(w11_sig) ,	// input [N-1:0] w11_sig
	.w12(w12_sig) ,	// input [N-1:0] w12_sig
	.w13(w13_sig) ,	// input [N-1:0] w13_sig
	.w14(w14_sig) ,	// input [N-1:0] w14_sig
	.en(en_sig) ,	// input [E8-1:0] en_sig
	.out(out_sig) ,	// output [N-1:0] out_sig
	.out1(out1_sig) ,	// output [N-1:0] out1_sig
	.out2(out2_sig) ,	// output [N-1:0] out2_sig
	.out3(out3_sig) ,	// output [N-1:0] out3_sig
	.out4(out4_sig) ,	// output [N-1:0] out4_sig
	.out5(out5_sig) ,	// output [N-1:0] out5_sig
	.out6(out6_sig) 	// output [N-1:0] out6_sig
);

defparam PE8_inst.Q = 15;
defparam PE8_inst.N = 32;
defparam PE8_inst.E8 = 10;
defparam PE8_inst.E4 = 4;
